@model eCommerce.Dto.ProductAttribute.ProductAttributeViewModel
@Html.HiddenFor(x => x.Id)
@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "ProductAttribute", FormMethod.Post))
{
    <div class="content-header">

        <h1 class="pull-left">Edit a new product attribute -> @Model.Name</h1>
        <a href="/Management/ProductAttribute/List"><i class="fa fa-undo">Back to produt attribute list</i></a>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>Save
            </button>
            <button type="submit" name="savecontiune" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>Save and Continue Edit
            </button>
            <button type="submit" onclick="javascript:ProductAttributeDelete(@Model.Id)" class="btn btn-danger">
                <i class="fa fa-remove"></i>Delete
            </button>
        </div>
    </div>

        @Html.Partial("_CreateEditProductAttribute")
}

<!--
    Product Attibute Value Degerini girilcek olan model
     -->
@Html.Action("_CreatEditProductAttributeValue", "ProductAttribute", Model.Id)

@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function ProductAttributePopup() {
            $("#productAttributeCreatevaluePopup").modal('show');
        }
        function CreateValueOnSuccess(result) {
            if (result == "1") {
                $("#form-Createproductattribute_Value")[0].reset();
                $("#productAttributeCreatevaluePopup").modal('hide');

                GetAttributeValueList();
            }
            else
            {
                alert("Ekleme sirasinda hata oluştu");
            }
        }
        function EditValueOnSuccess(result) {
            if (result == "1") {
                $("#form-Editproductattribute_Value")[0].reset();
                $("#productAttributeEditvaluePopup").modal('hide');

                GetAttributeValueList();
            } else {
                alert("guncelleme sirasinda hata oluştu");
            }
        }
        function GetAttributeValueList() {
            var Id = $("#Id").val();
            if (Id>0) {
                $.ajax({
                    type: "Get",
                    url: "/Management/ProductAttribute/_ProductAttributeValueList",
                    data: { 'Id': Id },
                    dataType:"html",
                    success: function (data) {

                        $("#divproductAttributeValueList").html(data);
                    }

                })
            }
        }
        function GetValueByAttributeId(Id) {
            if (Id>0) {

                if (Id > 0) {
                    $.ajax({
                        type: "Get",
                        url: "/Management/ProductAttribute/GetValueByAttributeId",
                        data: { 'Id': Id },
                        dataType: "json",
                        success: function (data) {
                            $("#valueId").val(data.Id);
                            $("#valueName").val(data.Name);
                            $("#valueCost").val(data.Cost);
                            $("#valueProductAttributeId").val(data.ProductAttributeId);
                            $("#valueOrderNo").val(data.OrderNo);
                            $("#productAttributeEditvaluePopup").modal('show');
                        }

                    })
                }
            }

        }

        function ProductAttributeDelete(Id) {

         
            console.log("attribute " + Id);
            if(Id>0)
            {
                var result = confirm("Silmek istediğinizden eminmisiniz");
                if (result) {

                    $.ajax({
                        type: "Post",
                        url: "/Management/ProductAttribute/Delete",
                        data: { 'Id': Id },
                        success: function (data) {
                            if(data=="1")
                            {window.location.assign("/Management/ProductAttribute/List");}

                        },
                        beforeSend: function () {
                            $("#wait").css("display", "block");
                        },
                        complate: function () {
                            $("#wait").css("display", "none");
                        },
                        error: function () {
                            alert("Silme işleminde bir hata gerçekleşti");
                        }


                    })

                }
            }

        }
        function ProductAttributeValueDelete(Id) {

         
            console.log("attribute " + Id);
            if(Id>0)
            {
                var result = confirm("Silmek istediğinizden eminmisiniz");
                if (result) {

                    $.ajax({
                        type: "Post",
                        url: "/Management/ProductAttribute/_ValueDeletePop",
                        data: { 'Id': Id },
                        success: function (data) {
                            if(data=="1")
                            {GetAttributeValueList();}

                        }, 
                        error: function () {
                            alert("Silme işleminde bir hata gerçekleşti");
                        }


                    })

                }
            }

        }
    </script>

}